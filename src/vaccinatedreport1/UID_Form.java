
package vaccinatedreport1;

import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
//import static java.lang.*;
import java.sql.*;
import java.lang.*;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static vaccinatedreport1.Registration_Form.jTextAdhr;
import static vaccinatedreport1.Registration_Form.jTextMobNo;
import static vaccinatedreport1.Registration_Form.jTextPName;


public class UID_Form extends javax.swing.JFrame {

    Connection conn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    
    public UID_Form() {
        initComponents();
        String label1="<html><u>SEARCHED RESULT!</u></html>";
        jLabelSearch.setText(label1);
        String label2="<html><u>UPDATE IF REQUIRED!</u></html>";
        jLabelUpdate.setText(label2);
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        conn = DbConnection.ConnecrDb();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void clearField()
{
    jTextPName.setText(null);
    jTextAge.setText(null);
    jTextMobNo.setText(null);
    jTextHosDes.setText(null);
    jTextAdhr.setText(null);
}
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButtonOk = new javax.swing.JButton();
        jLabelAge = new javax.swing.JLabel();
        jTextAge = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabelMobNo = new javax.swing.JLabel();
        jTextAdhr = new javax.swing.JTextField();
        jTextMobNo = new javax.swing.JTextField();
        jLabelSearch = new javax.swing.JLabel();
        jLabelHosDes = new javax.swing.JLabel();
        jButtonGo = new javax.swing.JButton();
        jTextHosDes = new javax.swing.JTextField();
        jLabelPName = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListUpdate = new javax.swing.JList<>();
        jTextPName = new javax.swing.JTextField();
        jButtonUpdate = new javax.swing.JButton();
        jButtonSearch = new javax.swing.JButton();
        jTextNew = new javax.swing.JTextField();
        jLabelUpdate = new javax.swing.JLabel();
        jButtonCount = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonOk.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonOk.setText("OK");
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonOk, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 590, 98, 28));

        jLabelAge.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelAge.setText("Age");
        jPanel1.add(jLabelAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 510, 154, 28));

        jTextAge.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextAge.setEnabled(false);
        jPanel1.add(jTextAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 510, 177, 28));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setText("AADHAR NUMBER :");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 250, -1, 39));

        jLabelMobNo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelMobNo.setText("Contact Number");
        jPanel1.add(jLabelMobNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 550, 154, 28));

        jTextAdhr.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextAdhr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextAdhrActionPerformed(evt);
            }
        });
        jTextAdhr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextAdhrKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextAdhrKeyTyped(evt);
            }
        });
        jPanel1.add(jTextAdhr, new org.netbeans.lib.awtextra.AbsoluteConstraints(562, 250, 240, 38));

        jTextMobNo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextMobNo.setEnabled(false);
        jPanel1.add(jTextMobNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 560, 177, 28));

        jLabelSearch.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabelSearch.setText("SEARCHED RESULT");
        jPanel1.add(jLabelSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 380, 190, 28));

        jLabelHosDes.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelHosDes.setText("Hospital Description");
        jPanel1.add(jLabelHosDes, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 600, 175, 30));

        jButtonGo.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButtonGo.setText("GO");
        jButtonGo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGoActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonGo, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 250, 65, 38));

        jTextHosDes.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextHosDes.setEnabled(false);
        jPanel1.add(jTextHosDes, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 610, 177, 30));

        jLabelPName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelPName.setText("Patient Name");
        jPanel1.add(jLabelPName, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 460, 154, 33));

        jLabel4.setIcon(new javax.swing.ImageIcon("C:\\Users\\Anjali Baranwal\\Documents\\NetBeansProjects\\VaccinatedReport\\src\\Images\\ankit.jpg")); // NOI18N
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 520, 180, 130));

        jListUpdate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jListUpdate.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Patient Name", "Age", "Contact Number", "Hospital Description" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jListUpdate);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 520, 176, 116));

        jTextPName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextPName.setEnabled(false);
        jTextPName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextPNameActionPerformed(evt);
            }
        });
        jPanel1.add(jTextPName, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 460, 177, 33));

        jButtonUpdate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonUpdate.setText("UPDATE");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 460, 115, 33));

        jButtonSearch.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonSearch.setText("Search");
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 250, 115, 40));

        jTextNew.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel1.add(jTextNew, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 530, 128, 32));

        jLabelUpdate.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabelUpdate.setText("UPDATE IF REQUIRED");
        jPanel1.add(jLabelUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 380, 210, 40));

        jButtonCount.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonCount.setText("NO. OF VACCINE USED");
        jButtonCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCountActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 160, -1, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vaccinatedreport1/jaha tera man part 2.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, 1350, 590));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1442, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextAdhrKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextAdhrKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        String adhr=jTextAdhr.getText();
        int len=adhr.length();
        if(Character.isDigit(c)&&(len<12))
        {
            jTextAdhr.setEditable(true);
        }
        else
        {
            jTextAdhr.setEditable(false);    
        }
    }//GEN-LAST:event_jTextAdhrKeyTyped

    private void jTextAdhrKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextAdhrKeyPressed
        // TODO add your handling code here:
        if(evt.getExtendedKeyCode()== KeyEvent.VK_BACK_SPACE||evt.getExtendedKeyCode()==KeyEvent.VK_DELETE)
        {   jTextAdhr.setEditable(true);    }
        else
        {   jTextAdhr.setEditable(false);   }
    }//GEN-LAST:event_jTextAdhrKeyPressed

    private void jButtonGoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGoActionPerformed
        
        String Adhar = jTextAdhr.getText();
        try{
            if(jTextAdhr.getText().length()!=12)
                JOptionPane.showMessageDialog(null,"Please Check Aadhar Number!");
            else{
            Connection reg_con = DriverManager.getConnection("jdbc:sqlite:C://sqlite//Vaccination_Report.db");
            
            Statement reg_stmt = reg_con.createStatement();
            
            String reg_SQL = "SELECT Adhr FROM Tab_Reg WHERE Adhr = '" + Adhar + "'";
            ResultSet reg_rs = reg_stmt.executeQuery(reg_SQL);
            if(reg_rs.next())
            {
                JOptionPane.showMessageDialog(null,"This UID is already Registered!");
                try{
                Connection d1_con = DriverManager.getConnection("jdbc:sqlite:C://sqlite//Vaccination_Report.db");
                
                Statement d1_stmt = d1_con.createStatement();
            
                String d1_SQL = "SELECT Adhr FROM Tab_Dose1 WHERE Adhr = '" + Adhar + "'";
                ResultSet d1_rs = d1_stmt.executeQuery(d1_SQL);
                if(d1_rs.next())
                {
                    JOptionPane.showMessageDialog(null,"You've taken 1st Dose!");
                    Statement d2_stmt = d1_con.createStatement();
            
                    String d2_SQL = "SELECT Adhr FROM Tab_Dose2 WHERE Adhr = '" + Adhar + "'";
                    ResultSet d2_rs = d2_stmt.executeQuery(d2_SQL);
                    if(d2_rs.next())
                    {
                        JOptionPane.showMessageDialog(null,"You've taken 2nd / final Dose!");
                        Statement b_stmt = d1_con.createStatement();

                        String b_SQL = "SELECT Adhr FROM Tab_Booster WHERE Adhr = '" + Adhar + "'";
                        ResultSet b_rs = b_stmt.executeQuery(b_SQL);
                        if(b_rs.next())
                        {
                            JOptionPane.showMessageDialog(null,"You've taken Booster Dose!");
                            int Repoinput = JOptionPane.showConfirmDialog(null, "Do you want to generate report?");
                            if(Repoinput==0)
                                new Booster_dose_Report().setVisible(true);
                            else
                                dispose();
                        }  
                        else
                        {
                            JOptionPane.showMessageDialog(null,"Booster dose not taken, please go ahead!");
                            reg_rs.close();
                            d1_rs.close();
                            d2_rs.close();

                            int Doseinput = JOptionPane.showConfirmDialog(null, "Do you want to take Booster dose?");
                            // 0=yes, 1=no, 2=cancel
                            System.out.println(Doseinput);
                            if(Doseinput==0)
                                new Booster_dose().setVisible(true);
                            else if(Doseinput==1)
                            {
                                int Repoinput = JOptionPane.showConfirmDialog(null, "Do you want to generate report?");
                                if(Repoinput==0)
                                    new Dose_2_Report().setVisible(true);
                                else
                                    dispose();
                            }
                            else
                                dispose();
                        }
                        
                    }  
                    else
                    {
                        JOptionPane.showMessageDialog(null,"2nd dose not taken, please go ahead!");
                        reg_rs.close();
                        d1_rs.close();
                        
                        int Doseinput = JOptionPane.showConfirmDialog(null, "Do you want to take 2nd dose?\nClick No if want to generate report!");
                        // 0=yes, 1=no, 2=cancel
                        System.out.println(Doseinput);
                        if(Doseinput==0)
                            new Dose_2().setVisible(true);
                        else if(Doseinput==1)
                        {
                            int Repoinput = JOptionPane.showConfirmDialog(null, "Do you want to generate report?");
                            if(Repoinput==0)
                                new Dose_1_Report().setVisible(true);
                            else
                                dispose();
                        }
                        else
                            dispose();
                    } 
                }  
                else
                {
                    JOptionPane.showMessageDialog(null,"1st dose not taken, please go ahead!");
                    reg_rs.close();
                    new Dose_1().setVisible(true);
                }}
                catch (Exception e)
                {
                    System.out.println("Error: " + e.getMessage());
                }
            }  
            else
            {
                JOptionPane.showMessageDialog(null,"Not Registered UID, please go ahead!");
                new Registration_Form().setVisible(true);
            }
        }}
        catch (HeadlessException | SQLException e)
        {
            System.out.println("Error: " + e.getMessage());
        }
        //new UID_Form().setVisible(true);
    }//GEN-LAST:event_jButtonGoActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        jLabelPName.setVisible(false);
        jLabelAge.setVisible(false);
        jLabelMobNo.setVisible(false);
        jLabelHosDes.setVisible(false);
        jLabelSearch.setVisible(false);
        jLabelUpdate.setVisible(false);
        jTextPName.setVisible(false);
        jTextAge.setVisible(false);
        jTextMobNo.setVisible(false);
        jTextHosDes.setVisible(false);
        jTextNew.setVisible(false);
        jListUpdate.setVisible(false);
        jButtonOk.setVisible(false);
        jButtonUpdate.setVisible(false);
        jListUpdate.setVisible(false);
        jTextAdhr.requestFocus();
    }//GEN-LAST:event_formWindowActivated

    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed
        // TODO add your handling code here:
    String adhar=jTextAdhr.getText();
    String sql="Update Tab_Dose1 set PName = ?, Age = ?, MobNo = ?, HosDes = ? where Adhr = '" + adhar + "' ";
    if(jTextNew.getText().length()==0||adhar.length()==0)
        JOptionPane.showMessageDialog(null,"Please enter Aadhar no / new name");
    else
    {
        try
        {
            pst = conn.prepareStatement(sql);
            if(jListUpdate.getSelectedIndex()==0)
            {
                pst.setString(1,jTextNew.getText());
                pst.setString(2,jTextAge.getText());
                pst.setString(3,jTextMobNo.getText());
                pst.setString(4,jTextHosDes.getText());
            }
            else if(jListUpdate.getSelectedIndex()==1)
            {
                pst.setString(1,jTextPName.getText());
                pst.setString(2,jTextNew.getText());
                pst.setString(3,jTextMobNo.getText());
                pst.setString(4,jTextHosDes.getText());
            }
            else if(jListUpdate.getSelectedIndex()==2)
            {
                pst.setString(1,jTextPName.getText());
                pst.setString(2,jTextAge.getText());
                pst.setString(3,jTextNew.getText());
                pst.setString(4,jTextHosDes.getText());
            }
            else if(jListUpdate.getSelectedIndex()==3)
            {
                pst.setString(1,jTextPName.getText());
                pst.setString(2,jTextAge.getText());
                pst.setString(3,jTextMobNo.getText());
                pst.setString(4,jTextNew.getText());
            }
            pst.execute();
        }
        catch(HeadlessException | SQLException e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
        
        String reg_SQL = "Update Tab_Reg set PName = ?, MobNo = ? WHERE Adhr = '" + adhar + "'";
        try
        {
            pst = conn.prepareStatement(reg_SQL);
            if(jListUpdate.getSelectedIndex()==0)
            {
                pst.setString(1,jTextNew.getText());
                pst.setString(2,jTextMobNo.getText());
            }
            else if(jListUpdate.getSelectedIndex()==2)
            {
                pst.setString(1,jTextPName.getText());
                pst.setString(2,jTextNew.getText());
            }
            pst.execute();
        }
        catch(HeadlessException | SQLException e)
        {
            //JOptionPane.showMessageDialog(null,e);
        }
        
        try
        {
            //Connection reg_con = DriverManager.getConnection("jdbc:sqlite:C://sqlite//Vaccination_Report.db");
            Statement d2_stmt = conn.createStatement();
            String d2_SQL1 = "SELECT Adhr FROM Tab_Dose2 WHERE Adhr = '" + adhar + "'";
            String d2_SQL = "Update Tab_Dose2 set PName = ?, Age = ?, MobNo = ?, HosDes = ? WHERE Adhr = '" + adhar + "'";
            ResultSet d2_rs = d2_stmt.executeQuery(d2_SQL1);
            if(d2_rs.next())
            {
                try
                {
                    pst = conn.prepareStatement(d2_SQL);
                    if(jListUpdate.getSelectedIndex()==0)
                    {
                        pst.setString(1,jTextNew.getText());
                        pst.setString(2,jTextAge.getText());
                        pst.setString(3,jTextMobNo.getText());
                        pst.setString(4,jTextHosDes.getText());
                    }
                    else if(jListUpdate.getSelectedIndex()==1)
                    {
                        pst.setString(1,jTextPName.getText());
                        pst.setString(2,jTextNew.getText());
                        pst.setString(3,jTextMobNo.getText());
                        pst.setString(4,jTextHosDes.getText());
                    }
                    else if(jListUpdate.getSelectedIndex()==2)
                    {
                        pst.setString(1,jTextPName.getText());
                        pst.setString(2,jTextAge.getText());
                        pst.setString(3,jTextNew.getText());
                        pst.setString(4,jTextHosDes.getText());
                    }
                    else if(jListUpdate.getSelectedIndex()==3)
                    {
                        pst.setString(1,jTextPName.getText());
                        pst.setString(2,jTextAge.getText());
                        pst.setString(3,jTextMobNo.getText());
                        pst.setString(4,jTextNew.getText());
                    }
                    pst.execute();
                }
                catch(HeadlessException | SQLException e)
                {
                    JOptionPane.showMessageDialog(null,e);
                }
            }
        }
        catch(HeadlessException | SQLException e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
        
        try
        {
            //Connection reg_con = DriverManager.getConnection("jdbc:sqlite:C://sqlite//Vaccination_Report.db");
            Statement b_stmt = conn.createStatement();
            String b_SQL1 = "SELECT Adhr FROM Tab_Booster WHERE Adhr = '" + adhar + "'";
            String b_SQL = "Update Tab_Booster set PName = ?, Age = ?, MobNo = ?, HosDes = ? WHERE Adhr = '" + adhar + "'";
            ResultSet b_rs = b_stmt.executeQuery(b_SQL1);
            if(b_rs.next())
            {
                try
                {
                    pst = conn.prepareStatement(b_SQL);
                    if(jListUpdate.getSelectedIndex()==0)
                    {
                        pst.setString(1,jTextNew.getText());
                        pst.setString(2,jTextAge.getText());
                        pst.setString(3,jTextMobNo.getText());
                        pst.setString(4,jTextHosDes.getText());
                    }
                    else if(jListUpdate.getSelectedIndex()==1)
                    {
                        pst.setString(1,jTextPName.getText());
                        pst.setString(2,jTextNew.getText());
                        pst.setString(3,jTextMobNo.getText());
                        pst.setString(4,jTextHosDes.getText());
                    }
                    else if(jListUpdate.getSelectedIndex()==2)
                    {
                        pst.setString(1,jTextPName.getText());
                        pst.setString(2,jTextAge.getText());
                        pst.setString(3,jTextNew.getText());
                        pst.setString(4,jTextHosDes.getText());
                    }
                    else if(jListUpdate.getSelectedIndex()==3)
                    {
                        pst.setString(1,jTextPName.getText());
                        pst.setString(2,jTextAge.getText());
                        pst.setString(3,jTextMobNo.getText());
                        pst.setString(4,jTextNew.getText());
                    }
                    pst.execute();
                }
                catch(HeadlessException | SQLException e)
                {
                    JOptionPane.showMessageDialog(null,e);
                }
            }
        }
        catch(HeadlessException | SQLException e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
        
        JOptionPane.showMessageDialog(null,"Updated Successfully");
        clearField(); // for clering field method
        jTextNew.setText(null);
        jLabel4.setVisible(true);
    }//GEN-LAST:event_jButtonOkActionPerformed
    }
    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        // TODO add your handling code here:
        jLabelPName.setVisible(true);
        jLabelAge.setVisible(true);
        jLabelMobNo.setVisible(true);
        jLabelHosDes.setVisible(true);
        jLabelSearch.setVisible(true);
        jLabelUpdate.setVisible(true);
        jTextPName.setVisible(true);
        jTextAge.setVisible(true);
        jTextMobNo.setVisible(true);
        jTextHosDes.setVisible(true);
        jButtonUpdate.setVisible(true);
// TODO add your handling code here:
        String Adhar=jTextAdhr.getText();
        try{
            Connection d1_con = DriverManager.getConnection("jdbc:sqlite:C://sqlite//Vaccination_Report.db");
            
            Statement d1_stmt = d1_con.createStatement();
            
            String d1_SQL = "SELECT * FROM Tab_Dose1 WHERE Adhr = '" + Adhar + "'";
            ResultSet d1_rs = d1_stmt.executeQuery(d1_SQL);
            if(d1_rs.next())
            {
                //JOptionPane.showMessageDialog(null,"again, This UID is already Registered!");
                jTextPName.setText(d1_rs.getString("PName"));
                jTextAge.setText(d1_rs.getString("Age"));
                jTextMobNo.setText(d1_rs.getString("MobNo"));
                jTextHosDes.setText(d1_rs.getString("HosDes"));
            }
            d1_rs.close();
        }
        catch (Exception e)
        {
            System.out.println("Error: " + e.getMessage());
        }
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        // TODO add your handling code here:
        jListUpdate.setVisible(true);
        jLabel4.setVisible(false);
        //pack();
        jTextNew.setVisible(true);
        jButtonOk.setVisible(true);
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jTextPNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextPNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextPNameActionPerformed

    private void jTextAdhrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextAdhrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextAdhrActionPerformed

    private void jButtonCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCountActionPerformed
        // TODO add your handling code here:n
        new Count().setVisible(true);
    }//GEN-LAST:event_jButtonCountActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UID_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UID_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UID_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UID_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //String Adhar=jTextAdhr.getText();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UID_Form().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton jButtonCount;
    private javax.swing.JButton jButtonGo;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelAge;
    private javax.swing.JLabel jLabelHosDes;
    private javax.swing.JLabel jLabelMobNo;
    private javax.swing.JLabel jLabelPName;
    private javax.swing.JLabel jLabelSearch;
    private javax.swing.JLabel jLabelUpdate;
    private javax.swing.JList<String> jListUpdate;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextField jTextAdhr;
    private javax.swing.JTextField jTextAge;
    private javax.swing.JTextField jTextHosDes;
    private javax.swing.JTextField jTextMobNo;
    private javax.swing.JTextField jTextNew;
    private javax.swing.JTextField jTextPName;
    // End of variables declaration//GEN-END:variables

    static class jButtonCount {

        static void setVisible(boolean b) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        public jButtonCount() {
        }
    }
}
